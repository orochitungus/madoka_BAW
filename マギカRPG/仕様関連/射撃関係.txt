立ち射撃
Idleで射撃（ShotDoneを実行）
	↓
AnimationState.shotを再生（クロスフェード）
m_AnimState[0] = AnimationState.Shotへ変更
	↓
10F目でShootを実行(キャラごとに異なる）
・弾があるとき限定
		矢の出現ポジションをフックと一致させる
		矢を出現させる
		親子関係を再設定する(=矢をフックの子にする）
		空中ダッシュ時以外はいったん止める		
	↓
28F目でShoot2を実行
・この時点では親子なので、Homura_NormalShotAllowsを持ったスクリプトを拾う(デフォルトで持っていないので、スクリプトで検索するしかない）
・弾があるとき限定	
	矢のスクリプトの速度を設定する
 	矢の方向を決定する(本体と同じ方向に向けて打ち出す。ただしノーロックで本体の向きが0のときはベクトルが0になるので、このときだけはカメラの方向に飛ばす）
		ロックオン
			ロックオン対象の座標を取得
			対象の座標を取得
			本体の回転角度を取得
			歩き射撃時は胸の角度＋（-?)90
		非ロックオン（角度0）
			本体角度が0の場合カメラの方向を射出角とし、正規化して代入する
			ただしそのままだとカメラが下を向いているため、一旦その分は補正する
		非ロックオン（角度0以外）
			本体角度を射出角へ変更


	矢のフックの位置に弾の位置を代入する
 	
	同じく回転角を代入する

	攻撃力を決定する(ここの0がスキルのインデックス。下も同様）
	ダウン値を決定する
	覚醒ゲージ増加量を決定する
	固定状態を解除
	弾を消費する

            	通常射撃/歩き射撃
		サブ射撃
		特殊射撃
		硬直時間を設定
	★射出音を再生する					→OK
	弾がないときはとりあえずフラグだけ立てておく	


LateUpdate
	アニメーション終了処理判定

	射撃
	歩き射撃
		モーションを戻す
	空中ダッシュ射撃

歩き撃ちの後戻らない

歩き撃ちで上体を相手に向ける
・上体を-74度捻らない上半身モーションを追加		→OK
・m_RunShotDoneはReturnmotionで折る			→OK
・歩き状態でShotDoneに入ったとき、m_RunShotDoneを立てる	→OK
・キャンセルしたらm_RunShotDoneを折る			→OK
・関数RunShotBrestを追加				→OK
	使うのはm_RunShotDoneが立っているときのみ
	補正値を引数として渡す（例：弓ほむらはY方向に-74度回す）
	lookatでY方向のみを取得（Eularで変換）
	補正値を加算
・首回しにm_RunShotDoneがfalseという条件を追加		→OK
・ロックオンしていないときはそのまま規定角度回す
	有効化されていない				→OK

・m_RunShotDoneを折ったときに角度を戻す			→OK
上体が回っているときは矢の射出方向を本体ではなく上体の方向にする
							→OK
	射出時に本体角度＋上体角度を矢の角度にする	
	ロックオン時はShoot2が方向を決めているので、歩行撃ちの場合で処理を分ける
	ここで上体を回す時と同じ正規化補正をかけないとならない
上体が回っても届かないときは、停止して相手の方向を向いて撃つ
							→OK
方法まとめ
・相手が前にいるか後ろにいるかを判定する（追加。ここで後ろもしくは射程外にいたら強制的に立ち撃ち扱い）					→OK
　①　transform.TransformDirection(Vector3.forward)でオブジェクトの正面の情報を得る
　②　自分の場所から対象との距離を引く
　③　①と②の角度をVector3.Angleで取る　					
　角度60度以内なら上体回しで撃つ（歩き撃ち限定で上記の矢の方向ベクトルを加算する）
　それ以外なら強制的に停止して（立ち撃ちにして）撃つ	


キャンセルダッシュ時に射撃のまま固定されるバグ回避	→OK（2/4現在未確認）

		