CharacterControl_Baseクラス

追撃可能時間(=ダメージによる硬直時間)を設定（＝入力禁止）	→OK
	m_DamagedTime/m_DamagedWaitTime
ダウン値復帰時間を設定						→OK			
	m_DownRebirthTime/m_DownRebirthWaitTime
ダウン時間を設定						→OK
	m_DownTime/m_DownWaitTime
被弾時のダメージの種類を保持する変数を用意（StateにBlowを追加）	→OK

被弾時の処理
Bulletクラス							→OK
	ダウン中かダウン値MAXならダメージを与えない
	そうでないならダメージとダウン値加算を確定
        ヒット時にダメージの種類をCharacterControl_Baseに与える
        ただしアーマー時ならダウン値とダメージだけ加算する
        Blow属性の攻撃を与えた場合も吹き飛びへ移行
	のけぞりならDamageInit
        吹き飛びならBlowInit
        吹き飛びの場合、相手に方向ベクトルを与える
	（食らい側のm_BlowDirectionを書き換える）
	吹き飛びの場合、攻撃を当てた相手を浮かす（Bulletのm_LaunchOffset分浮かす)

CharacterControl_Baseクラス
DamageInit()(共通。それぞれDamageInitとBlowInitで行う)		→OK	
	継承先で本体にくっついていたオブジェクトをカット 
	m_DownRebirthTimeのカウントを開始
        this.m_DownRebirthTime = Time.time;
	入力をポーズ以外すべて禁止
	ダメージアニメーションを再生
	動作及び慣性をカット
	飛び越えフラグをカット	
	のけぞりならDamageInit→DamageDoneを呼ぶ　　　　
        吹き飛びならDamageInit→BlowDoneを呼ぶ(錐揉みダウンもこちらに含む）
	
その他
　	ほむらで本体にくっついていた矢をカット（あるなら）	→OK

カウント関連							→OK				
初期化時
	m_DownRebirthTime/waitの初期化とカウントを行う
	m_DamagedTime/waitの初期化とカウントを行う(ダメージによる硬直時間）
	m_DownTime/waitの初期化とカウントを行う(ダウン時の累積時間）
メインループ
	m_nowDownRatioが0を超えていて、Damage_Initではなく（ダウン値加算前にリセットされる）m_DownRebirthTimeが規定時間を経過し、かつダウン値が閾値より小さければダウン値をリセットする



DamageDone()　							→OK
　　　　重力をカット
	ダメージ硬直の計算開始
	ステートをDamageに切り替える		
BlowDone()							→OK
        Rotateの固定を解除
	重力を復活
	ダウン値がMAXならステートをDownに切り替える
	ダウンアニメを再生する			
	攻撃と同じベクトルを与える。ここの値はm_BlowDirectionに保存したものを使う
	★錐揉みダウン（ダウン値MAX）なら錐揉みダウンアニメを再生し、ステートをSpinDownへ切り替える
		・そもそもデータがおかしい			→修正完了
		・着地時にDownアニメに切り替わってない可能性（未チェック.その場合SpinDownの場合限定関数を作る必要あり）
	そうでないならステートをBlowに切り替える

ダメージ確定後の処理（Bulletクラスから与える。格闘の場合は格闘クラスから？）
CharacterControl_Baseクラス
・Damage							→OK
　・ダメージ硬直終了
　m_DownRebirthTimeのカウントを開始
　空中にいた→ダウンアニメを再生する→Blowへ移行（飛ばされない）
　地上にいた→Idleへ移行し、Rotateをすべて0にして固定する
	

Blowの処理							→OK
CharacterControl_Baseクラス
	★ダウン値MAX吹き飛びの場合、着地前は回転させる
		ダウン値MAX→頭を下にしてきりもみ回転するアニメーションを作る（rigidbodyを回すとレーダーやレイキャストの都合で接地が判定できないのでアニメで回す）
	接地までなにもせず、接地したらDownへ移行し、m_DownTimeを計算する
	速度を0まで落とす（吹き飛び時のベクトルを消す）
	
	
	ブースト入力があった場合、ダウン値がMAX未満でブーストゲージが一定量あれば、Reversalへ変更	
	ブースト量を減らす
	rotationを0にして復帰アニメを再生する
	再固定する
	ステートを復帰にする

Downの処理							→OK
CharacterControl_Baseクラス
	rotationの固定を復活させ、0,0,0にする
	m_DownTimeが規定値を超えると、復帰アニメを再生する	
		
共通処理							→OK
　　　　m_DownRebirthTimeを常時インクリメントする(ダウン値MAXになったときを除く）
　　　　0より大きくなったらダウン値をリセットする


修正
・ダメージからの復帰モーションがない
・ダウンしたら即座に立ち上がる（ダウンで固定されずにリバーサルへ移行する）
・しかもダウン値がMAXのままで無敵状態が維持される

・AnimStateがDownに変わるとき、m_DownTimeが設定されてない
・Damage.cs89行目の処理は不要
	→修正したが再生されない？
	→一応修正完了

・ダウン値が復帰しない
	→ReversalComplete：ダウン復帰後処理をダウン復帰アニメの最終フレームに実装）	

Reversalの処理
	復帰アニメが終わると、Idleにする
        Idleのアニメを再生する
	ダウン値を0に戻す
	m_DownRebirthTimeを0にする
	m_DownTimeを0にする

死亡時の処理（ザコ限定。特殊なボスは例外）
　	HP0ならDamageInitでBlowDoneを呼ぶ
	その際Explosion_deathを本体にリンク
	CameraControlにキャラクター死亡と同時にロックオンを強制解除する処理を入れる
								→OK