MonoBehaviour.OnParticleCollision(GameObject)

説明
粒子加速器に当たったときOnParticleCollisionが呼び出されます。
ただしパーティクルそのものはとれません

このメッセージはWorldParticleColliderへとヒットした加速器に接続されているすべてのスクリプトに送信されます。あなたはWorldParticleColliderのインスペクタでsendCollisionMessageを有効にするとメッセージがのみ送信されます。

using UnityEngine;
using System.Collections;

public class Example : MonoBehaviour 
{
    void OnParticleCollision(GameObject other) 
    {
        Rigidbody body = other.rigidbody;
        if (body) 
        {
            Vector3 direction = other.transform.position - transform.position;
            direction = direction.normalized;
            body.AddForce(direction * 5);
        }
    }
}

手裏剣パーティクルシステム
このメッセージは、パーティクルシステムへとヒットした衝突に添付スクリプトに送信されます。

OnParticleCollisionはゲームオブジェクトパラメータがParticleSystemを表し衝突でGameObjectにアタッチスクリプトから呼び出されたとき。衝突は、パーティクルシステムは、現在のフレーム内に複数の粒子と衝突を打っても、任意のフレームでそれと衝突したパーティクルシステムごとに最大で1つのメッセージを受け取ります。ParticleSystemのParticleSystem.GetCollisionEventsによって引き起こされるすべての衝突についての詳細な情報を取得するために、ParticleSystem.CollisionEventの配列を取得するために使用しなければなりません。

OnParticleCollisionはGameObjectのパラメータはParticleSystem打た添付の衝突でゲームオブジェクトを表しParticleSystemに添付のスクリプトから呼び出されたとき。 ParticleSystemが打たれている衝突につき最大で1つのメッセージが表示されます。前述ParticleSystem.GetCollisionEventsはGameObjectの上のすべての衝突事件を取得するために使用しなければなりません。

有効/パーティクルシステム衝突モジュールのインスペクタで/衝突メッセージを送信する場合、メッセージは、送信されます。

OnParticleCollisionはコルーチンすることができ、単に関数内のyield文を使う
using UnityEngine;
using System.Collections;

public class Example : MonoBehaviour 
{
    private ParticleSystem.CollisionEvent[] collisionEvents = new ParticleSystem.CollisionEvent[16];
    void OnParticleCollision(GameObject other) 
    {
        ParticleSystem particleSystem;
        particleSystem = other.GetComponent<ParticleSystem>();
        int safeLength = particleSystem.safeCollisionEventSize;
        if (collisionEvents.Length < safeLength)
            collisionEvents = new ParticleSystem.CollisionEvent[safeLength];
        
        int numCollisionEvents = particleSystem.GetCollisionEvents(gameObject, collisionEvents);
        int i = 0;
        while (i < numCollisionEvents) 
        {
            if (gameObject.rigidbody) 
            {
                Vector3 pos = collisionEvents[i].intersection;
                Vector3 force = collisionEvents[i].velocity * 10;
                gameObject.rigidbody.AddForce(force);
            }
            i++;
        }
    }
}

using UnityEngine;
using System.Collections;

public class Example : MonoBehaviour 
{
    private ParticleSystem.CollisionEvent[] collisionEvents = new ParticleSystem.CollisionEvent[16];
    void OnParticleCollision(GameObject other) 
    {
        int safeLength = particleSystem.safeCollisionEventSize;
        if (collisionEvents.Length < safeLength)
            collisionEvents = new ParticleSystem.CollisionEvent[safeLength];
        
        int numCollisionEvents = particleSystem.GetCollisionEvents(other, collisionEvents);
        int i = 0;
        while (i < numCollisionEvents) 
        {
            if (other.rigidbody) 
            {
                Vector3 pos = collisionEvents[i].intersection;
                Vector3 force = collisionEvents[i].velocity * 10;
                other.rigidbody.AddForce(force);
            }
            i++;
        }
    }
}

